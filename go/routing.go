/*
 * Customer segmentation
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: 1.0.0
 * Contact: bouncepaw2@ya.ru
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

import (
	"fmt"
	"github.com/gorilla/mux"
	"net/http"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/",
		Index,
	},

	Route{
		"CreateSegmentPost",
		"POST",
		"/create_segment",
		CreateSegmentPost,
	},

	Route{
		"DeleteSegmentPost",
		"POST",
		"/delete_segment",
		DeleteSegmentPost,
	},

	Route{
		"GetSegmentsPost",
		"POST",
		"/get_segments",
		GetSegmentsPost,
	},

	Route{
		"UpdateUserPost",
		"POST",
		"/update_user",
		UpdateUserPost,
	},

	Route{
		"HistoryGet",
		"GET",
		"/history",
		HistoryGet,
	},

	Route{
		"HistoryPost",
		"POST",
		"/history",
		HistoryPost,
	},
}
